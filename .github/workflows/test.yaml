name: build
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - ROS_DISTRO=kinetic
          - ROS_DISTRO=melodic
          - ROS_DISTRO=noetic
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: .cached-dataset
          key: dataset-${{ hashFiles('test/CMakeLists.txt') }}
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: ${HOME}/layers.tar
          key: docker-layers-${{ hashFiles('package.xml') }}

      - name: Get dataset
        run: if [ -x .github/get_dataset.sh ]; then .github/get_dataset.sh; fi
      - name: Load docker layer cache
        run: if [ -f ${HOME}/layers.tar ]; then docker load -i ${HOME}/layers.tar; fi

      - name: Install gh-pr-comment
        run: |
          curl -sL https://raw.githubusercontent.com/at-wat/gh-pr-comment/master/install.sh | sh -s
          cp ~/.local/bin/gh-pr-comment .github/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download codecov script
        run: for i in 1 2 3; do wget --timeout=10 -O /tmp/codecovenv https://codecov.io/env && break; done

      - name: Test
        run: |
          eval export ${{ matrix.env }}
          eval export $(cat .github/ghbot.conf)
          BUILD_LINK="[${GITHUB_RUN_NUMBER}]"
          docker build \
            -t tester \
            -f .github/Dockerfile \
            --build-arg ROS_DISTRO \
            --pull=true . \
            || (gh-pr-comment "${BUILD_LINK} FAILED on ${ROS_DISTRO}" "docker build failed"; false)
          docker run --rm \
            -e BUILD_LINK=${BUILD_LINK} \
            $(sh <(curl -s https://raw.githubusercontent.com/at-wat/gh-pr-comment/master/env.sh)) \
            -e GITHUB_ACTIONS \
            $(bash /tmp/codecovenv) \
            tester \
            /catkin_ws/src/self/.github/test.sh
      - name: Save layer cache
        run: |
          eval export ${{ matrix.env }}
          LAYERS=$(docker history -q tester | grep -v missing)
          echo "layers: $(echo ${LAYERS})"
          docker save -o ${HOME}/layers.tar ${LAYERS}
