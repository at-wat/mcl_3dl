name: build
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env:
          - ROS_DISTRO=kinetic
          - ROS_DISTRO=melodic
          - ROS_DISTRO=noetic
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: .cached-dataset
          key: dataset-${{ hashFiles('test/CMakeLists.txt') }}
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: ${HOME}/layers.tar
          key: docker-layers-${{ hashFiles('package.xml') }}

      - name: Get dataset
        run: .github/get_dataset.sh
      - name: Load docker layer cache
        run: if [ -f ${HOME}/layers.tar ]; then docker load -i ${HOME}/layers.tar; fi

      - name: Install gh-pr-comment
        run: |
          curl -sL https://raw.githubusercontent.com/at-wat/gh-pr-comment/master/install.sh | sh -s
          cp ~/.local/bin/gh-pr-comment .github/
      - name: Download codecov script
        run: for i in 1 2 3; do wget --timeout=10 -O /tmp/codecovenv https://codecov.io/env && break; done

      - name: Test
        run: |
          eval export ${{ matrix.env }}
          PACKAGE_NAME=$(basename ${GITHUB_REPOSITORY})
          BUILD_LINK="[[${GITHUB_RUN_ID}](https://github.com/${GITHUB_REPOSITORY}/runs/${GITHUB_RUN_NUMBER})]"
          docker build \
            -t ${PACKAGE_NAME}:${ROS_DISTRO} \
            -f .github/Dockerfile \
            --build-arg ROS_DISTRO \
            --pull=true . \
            || (gh-pr-comment "${BUILD_LINK} FAILED on ${ROS_DISTRO}" "docker build failed"; false)
          docker run --rm \
            -e BUILD_LINK=${BUILD_LINK} \
            $(sh <(curl -s https://raw.githubusercontent.com/at-wat/gh-pr-comment/master/env.sh)) \
            $(bash /tmp/codecovenv) \
            ${PACKAGE_NAME}:${ROS_DISTRO} \
            /catkin_ws/src/${PACKAGE_NAME}/.github/test.sh
        env:
          - GITHUB_API_URL_BASE=https://ghbot-api.at-wat.tokyo
          - GITHUB_TOKEN=d50e89aa-016e-450b-a140-931fa5daa484
      - name: Save layer cache
        run: docker save -o ${HOME}/layers.tar $(docker history -q ${PACKAGE_NAME}:${ROS_DISTRO} | grep -v 'missing')
